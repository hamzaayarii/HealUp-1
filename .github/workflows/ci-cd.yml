name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

# Add permissions for GitHub Packages
permissions:
  contents: read
  packages: write

jobs:
  laravel-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --no-suggest
      - name: Run Laravel tests
        run: |
          cp .env.example .env || true
          php artisan key:generate || true
          php artisan config:cache || true
          ./vendor/bin/phpunit --coverage-clover=coverage.xml --coverage-html=coverage-html || true
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: |
            coverage.xml
            coverage-html/
          retention-days: 5

  python-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install Python dependencies
        run: |
          cd python_ai
          pip install -r requirements.txt
      - name: Run Python tests (if any)
        run: |
          cd python_ai
          if [ -f test.py ]; then python test.py; else echo "No python tests found"; fi

  frontend-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Build assets
        run: npm run build
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: public/build/
          retention-days: 5
      - name: Build success
        run: echo "‚úÖ Frontend assets built successfully!"

  code-quality:
    name: Code Quality Check
    runs-on: ubuntu-latest
    needs: [laravel-tests]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          tools: phpcs, phpstan
      - name: Download coverage report
        uses: actions/download-artifact@v4
        with:
          name: coverage-report
      - name: Display Coverage Summary
        run: |
          echo "üìä Code Coverage Report"
          echo "======================="
          if [ -f coverage.xml ]; then
            echo "‚úÖ Coverage report generated successfully"
          fi
          echo "======================="
      - name: Check PHP Code Style (Laravel Pint)
        run: |
          composer require laravel/pint --dev --no-interaction || true
          if [ -f vendor/bin/pint ]; then
            vendor/bin/pint --test || echo "‚ö†Ô∏è Code style issues found (non-blocking)"
          fi
        continue-on-error: true
      - name: Quality Check Complete
        run: |
          echo "‚úÖ Code quality checks completed"
          echo "üìù Note: For advanced quality analysis, ask repo owner to setup SonarCloud"

  debug-info:
    name: Debug Pipeline Info
    runs-on: ubuntu-latest
    needs: [laravel-tests, python-tests, frontend-build, code-quality]
    steps:
      - name: Display Debug Information
        run: |
          echo "================================================"
          echo "üîç DEBUG INFORMATION"
          echo "================================================"
          echo "Event Name: ${{ github.event_name }}"
          echo "Ref: ${{ github.ref }}"
          echo "Branch: ${{ github.ref_name }}"
          echo "Repository: ${{ github.repository }}"
          echo "Actor: ${{ github.actor }}"
          echo "Repository Owner: ${{ github.repository_owner }}"
          echo "================================================"
          echo "Checking Docker job condition:"
          echo "  - Is push event? ${{ github.event_name == 'push' }}"
          echo "  - Is pull_request event? ${{ github.event_name == 'pull_request' }}"
          echo "  - Is main branch? ${{ github.ref == 'refs/heads/main' }}"
          echo "  - Is moetaz branch? ${{ github.ref == 'refs/heads/moetaz' }}"
          echo "  - PR head ref: ${{ github.head_ref }}"
          echo "  - Is PR from moetaz? ${{ github.head_ref == 'moetaz' }}"
          echo ""
          echo "  - Push to main/moetaz? ${{ github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/moetaz') }}"
          echo "  - PR from moetaz? ${{ github.event_name == 'pull_request' && github.head_ref == 'moetaz' }}"
          echo ""
          echo "  ‚úÖ Should Docker run? ${{ (github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/moetaz')) || (github.event_name == 'pull_request' && github.head_ref == 'moetaz') }}"
          echo "================================================"

  docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: [laravel-tests, python-tests, frontend-build, code-quality]
    if: |
      github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download frontend build
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: public/build/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Docker Image Summary
        run: |
          echo "üê≥ Docker Image pushed successfully to GitHub Packages!"
          echo "================================================"
          echo "üì¶ Repository: ghcr.io/${{ github.repository }}"
          echo "üì¶ Tags:"
          echo "${{ steps.meta.outputs.tags }}"
          echo ""
          echo "================================================"
          echo "üîó View package at:"
          echo "   https://github.com/${{ github.repository }}/pkgs/container/healup-1"
          echo ""
          echo "üîó Pull command:"
          echo "   docker pull ghcr.io/${{ github.repository }}:latest"
          echo "================================================"

  notify:
    name: Pipeline Summary
    runs-on: ubuntu-latest
    needs: [laravel-tests, python-tests, frontend-build, code-quality, debug-info, docker]
    if: always()
    steps:
      - name: Pipeline Status
        run: |
          echo "================================================"
          echo "üéâ CI/CD Pipeline Execution Complete!"
          echo "================================================"
          echo "‚úÖ Laravel Tests: ${{ needs.laravel-tests.result }}"
          echo "‚úÖ Python Tests: ${{ needs.python-tests.result }}"
          echo "‚úÖ Frontend Build: ${{ needs.frontend-build.result }}"
          echo "‚úÖ Code Quality: ${{ needs.code-quality.result }}"
          echo "üîç Debug Info: ${{ needs.debug-info.result }}"
          echo "‚úÖ Docker Build: ${{ needs.docker.result }}"
          echo "================================================"

 # deploy:
  #   if: github.ref == 'refs/heads/main' && success()
  #   needs: [laravel-tests, python-tests]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3
  #     - name: Deploy to server via SSH
  #       uses: appleboy/ssh-action@v0.1.10
  #       with:
  #         host: ${{ secrets.DEPLOY_HOST }}
  #         username: ${{ secrets.DEPLOY_USER }}
  #         key: ${{ secrets.DEPLOY_KEY }}
  #         port: ${{ secrets.DEPLOY_PORT }}
  #         script: |
  #           cd /path/to/your/project
  #           git pull origin main
  #           composer install --no-interaction --prefer-dist --optimize-autoloader
  #           php artisan migrate --force
  #           php artisan config:cache
  #           php artisan route:cache
  #           php artisan view:cache
  #           php artisan storage:link
  #           # Add any other deployment commands here
